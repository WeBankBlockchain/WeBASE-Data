<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--对应mapper接口 -->
<mapper namespace="com.webank.webase.data.collect.contract.ContractMapper">
    <resultMap id="contractMap"
        type="com.webank.webase.data.collect.contract.entity.TbContract">
        <id column="contract_id" javaType="java.lang.Integer" jdbcType="INTEGER"
            property="contractId" />
        <result column="chain_id" javaType="java.lang.Integer"
            jdbcType="INTEGER" property="chainId" />
        <result column="group_id" javaType="java.lang.Integer"
            jdbcType="INTEGER" property="groupId" />
        <result column="contract_name" javaType="java.lang.String"
            jdbcType="VARCHAR" property="contractName" />
        <result column="contract_path" javaType="java.lang.String"
            jdbcType="VARCHAR" property="contractPath" />
        <result column="contract_source" javaType="java.lang.String"
            jdbcType="VARCHAR" property="contractSource" />
        <result column="contract_abi" javaType="java.lang.String"
            jdbcType="VARCHAR" property="contractAbi" />
        <result column="runtime_bin" javaType="java.lang.String"
            jdbcType="VARCHAR" property="runtimeBin" />
        <result column="bytecode_bin" javaType="java.lang.String"
            jdbcType="VARCHAR" property="bytecodeBin" />
        <result column="contract_type" javaType="java.lang.Integer"
            jdbcType="INTEGER" property="contractType" />
        <result column="description" javaType="java.lang.String"
            jdbcType="VARCHAR" property="description" />
        <result column="create_time" javaType="java.time.LocalDateTime"
            jdbcType="TIMESTAMP" property="createTime" />
        <result column="modify_time" javaType="java.time.LocalDateTime"
            jdbcType="TIMESTAMP" property="modifyTime" />
    </resultMap>

    <insert id="add"
        parameterType="com.webank.webase.data.collect.contract.entity.TbContract">
        insert into
        tb_contract(chain_id,group_id,contract_path,contract_name,contract_source,contract_abi,runtime_bin,bytecode_bin,description,create_time,modify_time)
        values(#{chainId},#{groupId},#{contractPath},#{contractName},#{contractSource},#{contractAbi},#{runtimeBin},#{bytecodeBin},#{description},NOW(),NOW())
        <selectKey keyProperty="contractId" order="AFTER"
            resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <insert id="addWithId"
        parameterType="com.webank.webase.data.collect.contract.entity.TbContract">
        insert into
        tb_contract(contract_id,chain_id,group_id,contract_path,contract_name,contract_source,contract_abi,runtime_bin,bytecode_bin,description,create_time,modify_time)
        values(#{contractId},#{chainId},#{groupId},#{contractPath},#{contractName},#{contractSource},#{contractAbi},#{runtimeBin},#{bytecodeBin},#{description},NOW(),NOW())
    </insert>
    
    <insert id="addList">
        insert into tb_contract
        (contract_id,group_id,chain_id,contract_path,contract_name,contract_source,contract_abi,runtime_bin,bytecode_bin,description,create_time,modify_time)
        values
        <foreach collection ="list" item="info" separator="," >
        (#{info.contractId},#{info.groupId},#{info.chainId},#{info.contractPath},#{info.contractName},#{info.contractSource},#{info.contractAbi},#{info.runtimeBin},#{info.bytecodeBin},#{info.description},NOW(),NOW())
        </foreach>
        ON DUPLICATE KEY UPDATE
        contract_id=VALUES(contract_id),contract_source=VALUES(contract_source),contract_abi=VALUES(contract_abi),runtime_bin=VALUES(runtime_bin),bytecode_bin=VALUES(bytecode_bin),description=VALUES(description),modify_time=NOW()
    </insert>

    <delete id="remove" parameterType="java.lang.Integer">
        delete from tb_contract where
        contract_id = #{contractId}
    </delete>

    <delete id="removeByGroupId">
        delete from tb_contract
        where chain_id = #{chainId}
        and group_id = #{groupId}
    </delete>

    <delete id="removeByChainId">
        delete from tb_contract where chain_id = #{chainId}
    </delete>

    <update id="update"
        parameterType="com.webank.webase.data.collect.contract.entity.TbContract">
        update tb_contract set modify_time = now()
        <if test="contractSource != null and contractSource != ''">
            ,contract_source = #{contractSource}
        </if>
        <if test="contractAbi != null and contractAbi != ''">
            ,contract_abi = #{contractAbi}
        </if>
        <if test="runtimeBin != null and runtimeBin != ''">
            ,runtime_bin = #{runtimeBin}
        </if>
        <if test="bytecodeBin != null and bytecodeBin != ''">
            ,bytecode_bin = #{bytecodeBin}
        </if>
        <if test="contractName != null and contractName != ''">
            ,contract_name = #{contractName}
        </if>
        <if test="description != null and description != ''">
            ,description = #{description}
        </if>
        where contract_id = #{contractId}
    </update>

    <select id="countOfContract"
        parameterType="com.webank.webase.data.collect.contract.entity.ContractParam"
        resultType="java.lang.Integer">
        select count(1) from tb_contract where 1=1
        <if test="contractId != null and contractId != ''">
            and contract_id = #{contractId}
        </if>
        <if test="chainId != null and chainId != ''">
            and chain_id = #{chainId}
        </if>
        <if test="groupId != null and groupId != ''">
            and group_id = #{groupId}
        </if>
        <if test="contractName != null and contractName != ''">
            and contract_name like CONCAT('%',#{contractName},'%')
        </if>
        <if test="contractPath != null and contractPath != ''">
            and contract_path = #{contractPath}
        </if>
    </select>

    <select id="listOfContract"
        parameterType="com.webank.webase.data.collect.contract.entity.ContractParam"
        resultMap="contractMap">
        select * from tb_contract where 1=1
        <if test="contractId != null and contractId != ''">
            and contract_id = #{contractId}
        </if>
        <if test="chainId != null and chainId != ''">
            and chain_id = #{chainId}
        </if>
        <if test="groupId != null and groupId != ''">
            and group_id = #{groupId}
        </if>
        <if test="contractName != null and contractName != ''">
            and contract_name = #{contractName}
        </if>
        <if test="contractPath != null and contractPath != ''">
            and contract_path = #{contractPath}
        </if>
        <if test="flagSortedByTime != null and flagSortedByTime != ''">
            order by modify_time ${flagSortedByTime}
        </if>
        <if test="start != null and pageSize != null">
            limit #{start},#{pageSize}
        </if>
    </select>

    <select id="queryByContractId" parameterType="java.lang.Integer"
        resultMap="contractMap">
        select * from tb_contract where contract_id = #{contractId}
    </select>

    <select id="queryContract"
        parameterType="com.webank.webase.data.collect.contract.entity.ContractParam"
        resultMap="contractMap">
        select * from tb_contract where 1=1
        <if test="contractId != null and contractId != ''">
            and contract_id = #{contractId}
        </if>
        <if test="chainId != null and chainId != ''">
            and chain_id = #{chainId}
        </if>
        <if test="groupId != null and groupId != ''">
            and group_id = #{groupId}
        </if>
        <if test="contractName != null and contractName != ''">
            and contract_name = #{contractName}
        </if>
        <if test="contractPath != null and contractPath != ''">
            and contract_path = #{contractPath}
        </if>
        <if test="partOfBytecodeBin != null and partOfBytecodeBin != ''">
            and locate(bytecode_bin,#{partOfBytecodeBin})
        </if>
        limit 1
    </select>

    <select id="queryContractByBin" resultMap="contractMap">
        select * from tb_contract
        where chain_id = #{chainId}
        and group_id = #{groupId}
        and runtime_bin like CONCAT(#{runtimeBin},'%')
    </select>

</mapper>