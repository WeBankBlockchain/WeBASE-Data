<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--对应mapper接口 -->
<mapper namespace="com.webank.webase.data.collect.parser.ParserMapper">
    <resultMap id="parserMap"
        type="com.webank.webase.data.collect.parser.entity.TbParser">
        <id column="id" javaType="java.lang.Long" jdbcType="BIGINT"
            property="id" />
        <result column="trans_hash" javaType="java.lang.String"
            jdbcType="VARCHAR" property="transHash" />
        <result column="block_number" javaType="java.math.BigInteger"
            jdbcType="INTEGER" property="blockNumber" />
        <result column="user_name" javaType="java.lang.String"
            jdbcType="VARCHAR" property="userName" />
        <result column="user_address" javaType="java.lang.String"
            jdbcType="VARCHAR" property="userAddress" />
        <result column="user_type" javaType="java.lang.Integer"
            jdbcType="INTEGER" property="userType" />
        <result column="contract_name" javaType="java.lang.String"
            jdbcType="VARCHAR" property="contractName" />
        <result column="contract_address" javaType="java.lang.String"
            jdbcType="VARCHAR" property="contractAddress" />
        <result column="interface_name" javaType="java.lang.String"
            jdbcType="VARCHAR" property="interfaceName" />
        <result column="trans_type" javaType="java.lang.Integer"
            jdbcType="INTEGER" property="transType" />
        <result column="trans_parser_type" javaType="java.lang.Integer"
            jdbcType="INTEGER" property="transParserType" />
        <result column="input" javaType="java.lang.String" jdbcType="VARCHAR"
            property="input" />
        <result column="output" javaType="java.lang.String" jdbcType="VARCHAR"
            property="output" />
        <result column="logs" javaType="java.lang.String" jdbcType="VARCHAR"
            property="logs" />
        <result column="block_timestamp" javaType="java.time.LocalDateTime"
            jdbcType="TIMESTAMP" property="blockTimestamp" />
        <result column="record_patition" javaType="java.lang.Integer"
            jdbcType="INTEGER" property="recordPatition" />
        <result column="create_time" javaType="java.time.LocalDateTime"
            jdbcType="TIMESTAMP" property="createTime" />
        <result column="modify_time" javaType="java.time.LocalDateTime"
            jdbcType="TIMESTAMP" property="modifyTime" />
    </resultMap>

    <insert id="add" parameterType="com.webank.webase.data.collect.parser.entity.TbParser">
        insert into ${tableName}
        (trans_hash,block_number,user_name,user_address,user_type,contract_name,contract_address,interface_name,trans_type,
        trans_parser_type,input,output,logs,block_timestamp,record_patition,create_time,modify_time)
        values
        (#{parser.transHash},#{parser.blockNumber},#{parser.userName},#{parser.userAddress},#{parser.userType},
        #{parser.contractName},#{parser.contractAddress},#{parser.interfaceName},#{parser.transType},
        #{parser.transParserType},#{parser.input},#{parser.output},#{parser.logs},#{parser.blockTimestamp},#{parser.recordPatition},now(),now())
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <update id="updateUnusualUser">
        update ${tableName}
        set user_name = #{userName},
        user_type = 0
        where user_address = #{address}
        and user_type = 1
    </update>

    <update id="updateUnusualContract">
        update ${tableName}
        set contract_name = #{result.contractName},
        interface_name = #{result.interfaceName},
        trans_parser_type = #{result.transParserType},
        input = #{result.input},
        output = #{result.output},
        logs = #{result.logs}
        where trans_hash = #{result.transHash}
        and (trans_parser_type = 1 or trans_parser_type = 2)
    </update>
    
    <select id="queryListByUserAddress" resultMap="parserMap">
        select * from ${tableName} where user_address = #{userAddress}
    </select>

    <select id="parserUserList" resultType="java.lang.String">
        select distinct user_name as userName from ${tableName}
    </select>

    <select id="parserInterfaceList"  resultType="java.lang.String">
        select distinct interface_name as interfaceName from ${tableName}
        where 1=1
        <if test="userName != null and userName != ''">
            and user_name = #{userName}
        </if>
    </select>

    <select id="countOfUnusualUser" resultType="java.lang.Integer">
        select count(1) from ${tableName}
        where user_type=1
        <if test="userName != null and userName != ''">
            and user_name like CONCAT('%',#{userName},'%')
        </if>
    </select>

    <select id="listOfUnusualUser" parameterType="Map"
        resultType="com.webank.webase.data.collect.parser.entity.UnusualUserInfo">
        select user_name as userName,trans_hash as transHash, block_timestamp as time
        from ${tableName} where user_type=1
        <if test="userName != null and userName != ''">
            and user_name like CONCAT('%',#{userName},'%')
        </if>
        <if test="start != null and pageSize != null">
            limit #{start},#{pageSize}
        </if>
    </select>

    <select id="countOfUnusualContract" resultType="java.lang.Integer">
        select count(1) from ${tableName}
        where trans_parser_type=1
        <if test="contractAddress != null and contractAddress != ''">
            and contract_address like CONCAT('%',#{contractAddress},'%')
        </if>
    </select>

    <select id="listOfUnusualContract" parameterType="Map"
        resultType="com.webank.webase.data.collect.parser.entity.UnusualContractInfo">
        select contract_address as contractAddress,contract_name as
        contractName,trans_hash as transHash, block_timestamp as time
        from ${tableName} 
        where trans_parser_type=1
        <if test="contractAddress != null and contractAddress != ''">
            and contract_address like CONCAT('%',#{contractAddress},'%')
        </if>
        <if test="start != null and pageSize != null">
            limit #{start},#{pageSize}
        </if>
    </select>

    <select id="queryByTxHash" resultMap="parserMap">
        select * from ${tableName} where trans_hash = #{transHash}
    </select>

    <select id="queryUnusualTxHashByBin" resultType="java.lang.String">
        select trans_hash
        from ${tableName}
        where contract_name = #{runtimeBin}
        and (trans_parser_type = 1 or trans_parser_type = 2)
    </select>

    <select id="queryUnusualTxHashMethodId" resultType="java.lang.String">
        select trans_hash
        from ${tableName}
        where interface_name = #{methodId}
        and (trans_parser_type = 1 or trans_parser_type = 2)
    </select>
    
    <select id="listOfEventInfo" parameterType="Map"
        resultType="com.webank.webase.data.collect.parser.entity.ParserEventInfo">
        select contract_address as contractAddress, user_address as userAddress, trans_hash as transHash, 
               block_timestamp as blockTimestamp, block_number as blockNumber,logs
        from ${tableName}
        where trans_parser_type=0
          and contract_address = #{contractAddress}
          and <![CDATA[ block_number > #{blockNumber} ]]>
          and logs like CONCAT('%',#{eventName},'%')
        limit 1000
    </select>
    
    <delete id="rollback">
        DELETE from ${tableName} where block_number = ${blockNumber}
    </delete>
</mapper>