<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--对应mapper接口 -->
<mapper namespace="com.webank.webase.data.collect.group.GroupMapper">
    <resultMap id="groupMap"
        type="com.webank.webase.data.collect.group.entity.TbGroup">
        <id column="id" javaType="java.lang.Integer" jdbcType="INTEGER" property="id"/>
        <result column="group_id" javaType="java.lang.Integer" jdbcType="INTEGER"
            property="groupId" />
        <result column="chain_id" javaType="java.lang.Integer" jdbcType="INTEGER"
            property="chainId" />
        <result column="genesis_block_hash" javaType="java.lang.String"
            jdbcType="VARCHAR" property="genesisBlockHash" />
        <result column="group_name" javaType="java.lang.String"
            jdbcType="VARCHAR" property="groupName" />
        <result column="app_name" javaType="java.lang.String"
            jdbcType="VARCHAR" property="appName" />
        <result column="app_version" javaType="java.lang.String"
            jdbcType="VARCHAR" property="appVersion" />
        <result column="app_synopsis" javaType="java.lang.String"
            jdbcType="VARCHAR" property="appSynopsis" />
        <result column="group_status" javaType="java.lang.Integer"
            jdbcType="INTEGER" property="groupStatus" />
        <result column="node_count" javaType="java.lang.Integer"
            jdbcType="INTEGER" property="nodeCount" />
        <result column="description" javaType="java.lang.String"
            jdbcType="VARCHAR" property="description" />
        <result column="create_time" javaType="java.time.LocalDateTime"
            jdbcType="TIMESTAMP" property="createTime" />
        <result column="modify_time" javaType="java.time.LocalDateTime"
            jdbcType="TIMESTAMP" property="modifyTime" />
    </resultMap>

    <insert id="save" parameterType="com.webank.webase.data.collect.group.entity.TbGroup">
        insert into tb_group
        (group_id,chain_id,genesis_block_hash,group_name,node_count,create_time,modify_time)
        values(#{groupId},#{chainId},#{genesisBlockHash},#{groupName},#{nodeCount},NOW(),NOW())
        ON DUPLICATE KEY UPDATE 
        node_count=#{nodeCount},modify_time=NOW()
    </insert>
    
    <update id="updateAppInfo">
		update tb_group 
		set app_name = #{appName},
		    app_version = #{appVersion},
		    app_synopsis = #{appSynopsis},
		    description = #{description},
			modify_time = now()
		where group_id = #{groupId}
        and chain_id = #{chainId}
	</update>

    <update id="updateStatus">
        update tb_group 
        set group_status = #{groupStatus},
            modify_time = NOW()
        where group_id = #{groupId}
        and chain_id = #{chainId}
    </update>

    <select id="getCount" resultType="java.lang.Integer">
        select count(1) from tb_group where 1 = 1
        <if test="chainId != null">
            and chain_id = #{chainId}
        </if>
        <if test="groupId != null">
            and group_id = #{groupId}
        </if>
        <if test="groupStatus != null">
            and group_status = #{groupStatus}
        </if>
    </select>

    <select id="getList" resultMap="groupMap">
        select * from tb_group where 1=1
        <if test="chainId != null">
            and chain_id = #{chainId}
        </if>
        <if test="groupId != null">
            and group_id = #{groupId}
        </if>
        <if test="groupStatus != null">
            and group_status = #{groupStatus}
        </if>
        order by group_id asc
    </select>
    
    <select id="getListByJob" resultMap="groupMap">
        select * from tb_group where 1=1
        <if test="chainId != null">
            and chain_id = #{chainId}
        </if>
        <if test="groupId != null">
            and group_id = #{groupId}
        </if>
        <if test="groupStatus != null">
            and group_status = #{groupStatus}
        </if>
        and MOD(id,#{shardingTotalCount}) = #{shardingItem}
        order by group_id asc
    </select>

    <select id="getGeneral"
        resultType="com.webank.webase.data.collect.group.entity.GroupGeneral">
        SELECT a.chain_id chainId,
               a.group_id groupId,
               a.node_count nodeCount,
               count(distinct(b.user_address)) userCount,
               count(distinct(b.contract_address)) contractCount
        FROM tb_group a, tb_parser_#{chainId}_#{groupId} b
        WHERE a.chain_id = #{chainId}
          AND a.group_id = #{groupId}
    </select>
    
    <delete id="remove">
        delete from tb_group
        where chain_id = #{chainId}
        <if test="groupId != null">
            and group_id = #{groupId}
        </if>
    </delete>
</mapper>