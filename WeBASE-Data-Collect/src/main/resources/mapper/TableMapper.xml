<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.webank.webase.data.collect.table.TableMapper">
    <update id="createTbChain">
        CREATE TABLE IF NOT EXISTS tb_chain (
        id int(11) NOT NULL AUTO_INCREMENT COMMENT '编号',
        chain_id int(11) NOT NULL COMMENT '区块链编号',
        chain_name varchar(120) DEFAULT NULL COMMENT '区块链名称',
		chain_type tinyint(4) DEFAULT '0' COMMENT '链类型（ 0-fisco 1-fabric）',
		encrypt_type tinyint(4) DEFAULT '0' COMMENT '加密类型（ 0-非国密 1-国密）',
        description varchar(1024) COMMENT '描述',
        create_time datetime DEFAULT NULL COMMENT '创建时间',
        modify_time datetime DEFAULT NULL COMMENT '修改时间',
        PRIMARY KEY (id),
        UNIQUE KEY uk_chain (chain_id),
        UNIQUE KEY uk_name (chain_name)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='区块链信息表';
    </update>

    <update id="createTbFront">
        CREATE TABLE IF NOT EXISTS tb_front (
        front_id int(11) NOT NULL AUTO_INCREMENT COMMENT '前置服务编号',
        chain_id int(11) NOT NULL COMMENT '所属区块链编号',
        node_id varchar(250) NOT NULL COMMENT '节点编号',
        front_ip varchar(16) NOT NULL COMMENT '前置服务ip',
        front_port int(11) DEFAULT NULL COMMENT '前置服务端口',
        agency varchar(32) NOT NULL COMMENT '所属机构名称',
        create_time datetime DEFAULT NULL COMMENT '创建时间',
        modify_time datetime DEFAULT NULL COMMENT '修改时间',
        PRIMARY KEY (front_id),
        UNIQUE KEY uk_chain_node (chain_id,node_id)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='前置服务信息表';
    </update>

    <update id="createTbGroup">
        CREATE TABLE IF NOT EXISTS tb_group (
        id int(11) NOT NULL AUTO_INCREMENT COMMENT '编号',
        group_id int(11) NOT NULL COMMENT '群组ID',
        chain_id int(11) NOT NULL COMMENT '所属区块链编号',
        genesis_block_hash varchar(128) DEFAULT NULL COMMENT '创世块hash',
        app_name varchar(128) DEFAULT NULL COMMENT '应用名称',
        app_version varchar(64) DEFAULT NULL COMMENT '应用版本号',
        app_summary varchar(2048) DEFAULT NULL COMMENT '应用概要介绍',
        group_status tinyint(4) DEFAULT '1' COMMENT '状态（1-正常 2-异常）',
        node_count int DEFAULT '0' COMMENT '群组下节点数',
        description text COMMENT '描述',
        create_time datetime DEFAULT NULL COMMENT '创建时间',
        modify_time datetime DEFAULT NULL COMMENT '修改时间',
        PRIMARY KEY (id),
        UNIQUE KEY uk_group_chain (group_id,chain_id)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='群组信息表';
    </update>

    <update id="createTbFrontGroupMap">
        CREATE TABLE IF NOT EXISTS tb_front_group_map (
        id int(11) NOT NULL AUTO_INCREMENT COMMENT '编号',
        chain_id int(11) NOT NULL COMMENT '区块链编号',
        front_id int(11) NOT NULL COMMENT '前置服务编号',
        group_id int(11) NOT NULL COMMENT '群组编号',
        create_time datetime DEFAULT NULL COMMENT '创建时间',
        modify_time datetime DEFAULT NULL COMMENT '修改时间',
        PRIMARY KEY (id),
        UNIQUE KEY uk_chain_front_group (chain_id,front_id,group_id)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='前置群组映射表';
    </update>

    <update id="createTbNode">
        CREATE TABLE IF NOT EXISTS tb_node (
        id int(11) NOT NULL AUTO_INCREMENT COMMENT '自增编号',
        node_id varchar(250) NOT NULL  COMMENT '节点编号',
        chain_id int(11) NOT NULL COMMENT '所属区块链编号',
        group_id int(11) NOT NULL COMMENT '所属群组编号',
        org_name varchar(128) DEFAULT NULL COMMENT '所属机构',
        node_ip varchar(16) DEFAULT NULL COMMENT '节点ip',
        p2p_port int(11) DEFAULT NULL COMMENT '节点p2p端口',
        block_number bigint(20) DEFAULT '0' COMMENT '节点块高',
        pbft_view bigint(20) DEFAULT '0' COMMENT 'pbft_view',
        node_active tinyint(4) DEFAULT '2' COMMENT '节点存活标识(1存活，2不存活)',
        description varchar(1024) COMMENT '描述',
        create_time datetime DEFAULT NULL COMMENT '创建时间',
        modify_time datetime DEFAULT NULL COMMENT '修改时间',
        PRIMARY KEY (id),
        UNIQUE KEY uk_node (node_id,chain_id,group_id)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='节点信息表';
    </update>

    <update id="createTbTxnDaily">
        CREATE TABLE IF NOT EXISTS tb_txn_daily (
        id int(11) NOT NULL AUTO_INCREMENT COMMENT '自增编号',
        chain_id int(11) NOT NULL COMMENT '所属区块链编号',
        group_id int(11) NOT NULL COMMENT '所属群组编号',
        stat_date date NOT NULL COMMENT '统计日期',
        txn int(11) COMMENT '交易量',
        block_number int(11) DEFAULT '0' COMMENT '当前统计到的块高',
        create_time datetime DEFAULT NULL COMMENT '创建时间',
        modify_time datetime DEFAULT NULL COMMENT '修改时间',
        PRIMARY KEY (id),
        UNIQUE KEY uk_data (chain_id,group_id,stat_date)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='每日交易量记录表';
    </update>
    
    <update id="createTbUser">
        CREATE TABLE IF NOT EXISTS tb_user (
        user_id int(11) NOT NULL AUTO_INCREMENT COMMENT '用户编号',
        chain_id int(11) NOT NULL COMMENT '所属区块链编号',
        group_id int(11) NOT NULL COMMENT '所属群组编号',
        user_name varchar(64) binary NOT NULL COMMENT '用户名',
        address varchar(64) DEFAULT NULL COMMENT '链上地址',
        description varchar(1024) DEFAULT NULL COMMENT '备注',
        create_time datetime DEFAULT NULL COMMENT '创建时间',
        modify_time datetime DEFAULT NULL COMMENT '修改时间',
        PRIMARY KEY (user_id),
        UNIQUE KEY uk_address (chain_id,group_id,address)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='用户信息表';
    </update>
    
    <update id="createTbContract">
        CREATE TABLE IF NOT EXISTS tb_contract (
        contract_id int(11) NOT NULL AUTO_INCREMENT COMMENT '合约编号',
        chain_id int(11) NOT NULL COMMENT '所属区块链编号',
        group_id int(11) NOT NULL COMMENT '所属群组编号',
        contract_path varchar(24) binary NOT NULL COMMENT '合约所在目录',
        contract_name varchar(120) binary NOT NULL COMMENT '合约名称',
        contract_source mediumtext COMMENT '合约源码',
        contract_address varchar(64) COMMENT '合约地址',
        contract_abi mediumtext COMMENT '编译合约生成的abi文件内容',
        runtime_bin mediumtext COMMENT '合约运行时binary，用于合约解析',
        bytecode_bin mediumtext COMMENT '合约bytecode binary，用于部署合约',
        contract_type tinyint(4) DEFAULT '0' COMMENT '合约类型(0-普通合约，1-系统合约)',
        description varchar(1024) COMMENT '描述',
        create_time datetime DEFAULT NULL COMMENT '创建时间',
        modify_time datetime DEFAULT NULL COMMENT '修改时间',
        PRIMARY KEY (contract_id),
        UNIQUE KEY uk_group_path_name (chain_id,group_id,contract_path,contract_name)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='合约表';
    </update>
    
    <update id="createTbMethod">
        CREATE TABLE IF NOT EXISTS tb_method (
        id int(11) NOT NULL AUTO_INCREMENT COMMENT '自增编号',
        contract_id int(11) NOT NULL COMMENT '所属合约编号',
        chain_id int(11) NOT NULL COMMENT '所属区块链编号',
        group_id int(11) NOT NULL COMMENT '所属群组编号',
        method_id varchar(128) COMMENT '方法id',
        method_name varchar(128) COMMENT '方法名',
        method_type varchar(32) COMMENT '方法类型',
        create_time datetime DEFAULT NULL COMMENT '创建时间',
        modify_time datetime DEFAULT NULL COMMENT '修改时间',
        PRIMARY KEY (id),
        UNIQUE KEY uk_method (contract_id,method_id)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='方法解析信息表';
    </update>
    
    <update id="createTbSolc">
        CREATE TABLE IF NOT EXISTS tb_solc (
        id int(11) NOT NULL AUTO_INCREMENT COMMENT '自增编号',
        solc_name varchar(128) COMMENT '编译名称',
        encrypt_type tinyint(4) DEFAULT '0' COMMENT '类型（ 0-非国密 1-国密）',
        md5 varchar(128) COMMENT 'md5',
        file_size bigint(25)COMMENT '文件长度',
        description varchar(1024) COMMENT '描述',
        create_time datetime DEFAULT NULL COMMENT '创建时间',
        modify_time datetime DEFAULT NULL COMMENT '修改时间',
        PRIMARY KEY (id)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='编译器信息表';
    </update>
    
    <update id="createTbConfigVersion">
        CREATE TABLE IF NOT EXISTS tb_config_version (
	    id int(11) NOT NULL AUTO_INCREMENT COMMENT '编号',
	    chain_info_version varchar(64) DEFAULT NULL COMMENT '链信息版本',
	    front_info_version varchar(64) DEFAULT NULL COMMENT '前置信息版本',
	    group_info_verion varchar(64) DEFAULT NULL COMMENT '群组信息版本',
	    user_info_version varchar(64) DEFAULT NULL COMMENT '用户信息版本',
	    contract_info_version varchar(64) DEFAULT NULL COMMENT '合约信息版本',
	    create_time datetime DEFAULT NULL COMMENT '创建时间',
	    modify_time datetime DEFAULT NULL COMMENT '修改时间',
	    PRIMARY KEY (id)
	   ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='配置版本信息表';
    </update>
    
    <update id="createTbTaskPool" parameterType="java.lang.String">
        CREATE TABLE IF NOT EXISTS ${tableName}(
        id bigint NOT NULL AUTO_INCREMENT COMMENT '自增编号',
        block_number bigint(25) NOT NULL COMMENT '块高',
        sync_status tinyint(4) NOT NULL COMMENT '同步状态：INIT(0), DOING(1), DONE(2), ERROR(3), TIMEOUT(4)',
        certainty tinyint(4) NOT NULL COMMENT '确定性',
        handle_item tinyint(4) NOT NULL COMMENT '处理项',
        create_time datetime DEFAULT NULL COMMENT '创建时间',
        modify_time datetime DEFAULT NULL COMMENT '修改时间',
        PRIMARY KEY (id),
        UNIQUE KEY uk_number (block_number),
        KEY idx_status (sync_status)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='区块拉取任务信息表';
    </update>

    <update id="createTbBlock" parameterType="java.lang.String">
        CREATE TABLE IF NOT EXISTS ${tableName}(
        id bigint NOT NULL AUTO_INCREMENT COMMENT '自增编号',
        block_number bigint(25) NOT NULL COMMENT '块高',
        block_hash varchar(128) NOT NULL COMMENT '块hash',
        block_timestamp datetime NOT NULL COMMENT '出块时间',
        sealer_index int(4) NOT NULL COMMENT '打包节点索引',
        sealer varchar(250) DEFAULT NULL COMMENT '打包节点',
        trans_count int(11) DEFAULT '0' COMMENT '块包含的交易数',
        block_detail mediumtext COMMENT '区块详情',
        create_time datetime DEFAULT NULL COMMENT '创建时间',
        modify_time datetime DEFAULT NULL COMMENT '修改时间',
        PRIMARY KEY (id),
        UNIQUE KEY uk_number (block_number)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='区块信息表';
    </update>

    <update id="createTbTransaction" parameterType="java.lang.String">
        CREATE TABLE IF NOT EXISTS ${tableName} (
        id bigint NOT NULL AUTO_INCREMENT COMMENT '自增编号',
        trans_hash varchar(128) NOT NULL COMMENT '交易hash',
        block_number bigint(25) NOT NULL COMMENT '所属区块',
        block_timestamp datetime NOT NULL COMMENT '所属块出块时间',
        trans_detail mediumtext COMMENT '交易详情',
        audit_flag tinyint(4) DEFAULT '1' COMMENT '是否已统计（1-未审计，2-已审计）',
        create_time datetime DEFAULT NULL COMMENT '创建时间',
        modify_time datetime DEFAULT NULL COMMENT '修改时间',
        PRIMARY KEY (id),
        UNIQUE KEY uk_hash (trans_hash),
        KEY idx_flag (audit_flag),
        KEY idx_number (block_number)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='交易信息表';
    </update>

    <update id="createTbReceipt" parameterType="java.lang.String">
        CREATE TABLE IF NOT EXISTS ${tableName} (
        id bigint NOT NULL AUTO_INCREMENT COMMENT '自增编号',
        trans_hash varchar(128) NOT NULL COMMENT '交易hash',
        block_number bigint(25) NOT NULL COMMENT '所属区块',
        block_timestamp datetime NOT NULL COMMENT '所属块出块时间',
        receipt_detail mediumtext COMMENT '交易回执详情',
        create_time datetime DEFAULT NULL COMMENT '创建时间',
        modify_time datetime DEFAULT NULL COMMENT '修改时间',
        PRIMARY KEY (id),
        UNIQUE KEY uk_hash (trans_hash),
        KEY idx_number (block_number)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='交易回执信息表';
    </update>

    <update id="createTbParser" parameterType="java.lang.String">
        CREATE TABLE IF NOT EXISTS ${tableName} (
        id bigint NOT NULL AUTO_INCREMENT COMMENT '自增编号',
        trans_hash varchar(128) NOT NULL COMMENT '交易hash',
        block_number bigint(25) NOT NULL COMMENT '所属区块',
        user_name varchar(128) NOT NULL COMMENT '用户名称',
        user_address varchar(64) NOT NULL COMMENT '用户地址',
        user_type tinyint(4) DEFAULT '0' COMMENT '用户类型(0-正常，1-异常)',
        contract_name varchar(128) NOT NULL COMMENT '合约名称',
        contract_address varchar(64) NOT NULL COMMENT '合约地址',
        interface_name varchar(256) NOT NULL COMMENT '合约接口名',
        trans_type tinyint(4) DEFAULT '0' COMMENT '交易类型(0-合约部署，1-接口调用)',
        trans_parser_type tinyint(4) DEFAULT '0' COMMENT '交易解析类型(0-正常，1-异常合约，2-异常接口)',
        input text COMMENT '输入信息',
        output text COMMENT '输出信息',
        logs text COMMENT '日志信息',
        block_timestamp datetime NOT NULL COMMENT '所属块出块时间',
        create_time datetime DEFAULT NULL COMMENT '创建时间',
        modify_time datetime DEFAULT NULL COMMENT '修改时间',
        PRIMARY KEY (id),
        UNIQUE KEY uk_hash (trans_hash),
        KEY idx_un (user_name),
        KEY idx_ua (user_address),
        KEY idx_cn (contract_name),
        KEY idx_ca (contract_address)
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='交易解析信息表';
    </update>

    <select id="queryTables" resultType="java.lang.String">
        select table_name from information_schema.tables where
        table_schema=#{dbName}
        <if test="tableName != null">
            and table_name = #{tableName}
        </if>
    </select>

    <delete id="deleteByTableName" parameterType="java.lang.String">
        delete from ${tableName} limit 1000
    </delete>

    <update id="dropTable" parameterType="java.lang.String">
        drop table if exists ${tableName}
    </update>

</mapper>
