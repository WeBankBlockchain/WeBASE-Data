<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--对应mapper接口 -->
<mapper namespace="com.webank.webase.data.collect.transaction.TransactionMapper">
    <resultMap id="transactionMap"
        type="com.webank.webase.data.collect.transaction.entity.TbTransaction">
        <id column="id" javaType="java.lang.Long" jdbcType="BIGINT"
            property="id" />
        <result column="trans_hash" javaType="java.lang.String" jdbcType="VARCHAR"
            property="transHash" />
        <result column="block_number" javaType="java.math.BigInteger"
            jdbcType="INTEGER" property="blockNumber" />
        <result column="block_timestamp" javaType="java.time.LocalDateTime"
            jdbcType="TIMESTAMP" property="blockTimestamp" />
        <result column="trans_detail" javaType="java.lang.String" jdbcType="VARCHAR"
            property="transDetail" />
        <result column="audit_flag" javaType="java.lang.Integer"
            jdbcType="INTEGER" property="auditFlag" />
        <result column="record_patition" javaType="java.lang.Integer"
            jdbcType="INTEGER" property="recordPatition" />
        <result column="create_time" javaType="java.time.LocalDateTime"
            jdbcType="TIMESTAMP" property="createTime" />
        <result column="modify_time" javaType="java.time.LocalDateTime"
            jdbcType="TIMESTAMP" property="modifyTime" />
    </resultMap>

    <insert id="add">
        insert ignore into
        ${tableName}(trans_hash,block_number,block_timestamp,trans_detail,record_patition,create_time,modify_time)
        values(#{trans.transHash},#{trans.blockNumber},#{trans.blockTimestamp},#{trans.transDetail},#{trans.recordPatition},NOW(),NOW())
    </insert>

    <select id="getCount"
        parameterType="com.webank.webase.data.collect.transaction.entity.TransListParam"
        resultType="java.lang.Integer">
        select count(1) from ${tableName} where 1=1
        <if test="param.transHash != null and param.transHash != ''">
            and trans_hash = #{param.transHash}
        </if>
        <if test="param.blockNumber != null">
            and block_number = #{param.blockNumber}
        </if>
    </select>

    <select id="getCountByMinMax" resultType="java.lang.Integer">
        select max(trans_number) - min(trans_number) + 1 from ${tableName}
    </select>

    <select id="getList"
        parameterType="com.webank.webase.data.collect.transaction.entity.TransListParam"
        resultMap="transactionMap">
        select * from ${tableName} where 1=1
        <if test="param.transHash != null and param.transHash != ''">
            and trans_hash = #{param.transHash}
        </if>
        <if test="param.blockNumber != null">
            and block_number = #{param.blockNumber}
        </if>
        <if test="param.flagSortedByBlock != null and param.flagSortedByBlock != ''">
            order by block_number ${param.flagSortedByBlock}
        </if>
        <if test="param.start != null and param.pageSize != null">
            limit #{param.start},#{param.pageSize}
        </if>
    </select>

    <select id="getByHash" resultMap="transactionMap">
        select * from ${tableName}
        where trans_hash = #{transHash}
    </select>
    
    <select id="listOfUnStatTransHash" resultType="java.lang.String">
        select trans_hash from ${tableName}
        where audit_flag=1
        order by block_number
        limit 2000
    </select>

    <select id="listOfUnStatTransactionByJob" resultMap="transactionMap">
        select * from ${tableName}
        where audit_flag=1 and
        MOD(block_number,#{shardingTotalCount}) = #{shardingItem}
        order by block_number
        limit 0,10000
    </select>

    <select id="queryMinMaxBlock"
        resultType="com.webank.webase.data.collect.block.entity.MinMaxBlock">
        select
        max(block_number) as maxBlockNumber,min(block_number)
        as minBLockNumber
        from ${tableName}
    </select>

    <update id="updateTransStatFlag">
        update ${tableName}
        set audit_flag = 2
        where trans_hash = #{transHash}
    </update>
    
    <delete id="rollback">
        DELETE from ${tableName} where block_number = ${blockNumber}
    </delete>
</mapper>