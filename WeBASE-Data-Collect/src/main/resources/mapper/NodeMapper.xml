<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--对应mapper接口 -->
<mapper namespace="com.webank.webase.data.collect.node.NodeMapper">
    <resultMap id="nodeMap"
        type="com.webank.webase.data.collect.node.entity.TbNode">
        <id column="id" javaType="java.lang.Integer" jdbcType="INTEGER"
            property="id" />
        <result column="node_id" javaType="java.lang.String" jdbcType="VARCHAR"
            property="nodeId" />
        <result column="chain_id" javaType="java.lang.Integer"
            jdbcType="INTEGER" property="chainId" />
        <result column="group_id" javaType="java.lang.Integer"
            jdbcType="INTEGER" property="groupId" />
        <result column="org_name" javaType="java.lang.String" jdbcType="VARCHAR"
            property="orgName" />
        <result column="node_ip" javaType="java.lang.String" jdbcType="VARCHAR"
            property="nodeIp" />
        <result column="p2p_port" javaType="java.lang.Integer"
            jdbcType="INTEGER" property="p2pPort" />
        <result column="block_number" javaType="java.math.BigInteger"
            jdbcType="INTEGER" property="blockNumber" />
        <result column="pbft_view" javaType="java.math.BigInteger"
            jdbcType="INTEGER" property="pbftView" />
        <result column="node_active" javaType="java.lang.Integer"
            jdbcType="INTEGER" property="nodeActive" />
        <result column="description" javaType="java.lang.String"
            jdbcType="VARCHAR" property="description" />
        <result column="create_time" javaType="java.time.LocalDateTime"
            jdbcType="TIMESTAMP" property="createTime" />
        <result column="modify_time" javaType="java.time.LocalDateTime"
            jdbcType="TIMESTAMP" property="modifyTime" />
    </resultMap>
    
    <resultMap id="nodeMapWithFrontId"
        type="com.webank.webase.data.collect.node.entity.TbNode">
        <id column="id" javaType="java.lang.Integer" jdbcType="INTEGER"
            property="id" />
        <result column="node_id" javaType="java.lang.String" jdbcType="VARCHAR"
            property="nodeId" />
        <result column="front_id" javaType="java.lang.Integer"
            jdbcType="INTEGER" property="frontId" />
        <result column="chain_id" javaType="java.lang.Integer"
            jdbcType="INTEGER" property="chainId" />
        <result column="group_id" javaType="java.lang.Integer"
            jdbcType="INTEGER" property="groupId" />
        <result column="org_name" javaType="java.lang.String" jdbcType="VARCHAR"
            property="orgName" />
        <result column="node_ip" javaType="java.lang.String" jdbcType="VARCHAR"
            property="nodeIp" />
        <result column="p2p_port" javaType="java.lang.Integer"
            jdbcType="INTEGER" property="p2pPort" />
        <result column="block_number" javaType="java.math.BigInteger"
            jdbcType="INTEGER" property="blockNumber" />
        <result column="pbft_view" javaType="java.math.BigInteger"
            jdbcType="INTEGER" property="pbftView" />
        <result column="node_active" javaType="java.lang.Integer"
            jdbcType="INTEGER" property="nodeActive" />
        <result column="description" javaType="java.lang.String"
            jdbcType="VARCHAR" property="description" />
        <result column="create_time" javaType="java.time.LocalDateTime"
            jdbcType="TIMESTAMP" property="createTime" />
        <result column="modify_time" javaType="java.time.LocalDateTime"
            jdbcType="TIMESTAMP" property="modifyTime" />
    </resultMap>

    <insert id="add" parameterType="com.webank.webase.data.collect.node.entity.TbNode">
        insert ignore into tb_node
        (node_id,chain_id,group_id,node_ip,p2p_port,description,create_time,modify_time)
        values(#{nodeId},#{chainId},#{groupId},#{nodeIp},#{p2pPort},#{description},NOW(),NOW())
    </insert>
    
    <update id="updateOrgInfo">
		update tb_node 
		set org_name = #{orgName},
		    description = #{description},
			modify_time = now()
		where chain_id = #{chainId}
        and node_id = #{nodeId}
	</update>

    <select id="getCount"
        parameterType="com.webank.webase.data.collect.node.entity.NodeParam"
        resultType="java.lang.Integer">
        select count(1) from tb_node where 1=1
        <if test="chainId != null">
            and chain_id = #{chainId}
        </if>
        <if test="groupId != null">
            and group_id = #{groupId}
        </if>
        <if test="nodeId != null and nodeId != ''">
            and node_id = #{nodeId}
        </if>
        <if test="p2pPort != null">
            and p2p_port = #{p2pPort}
        </if>
        <if test="nodeIp != null and nodeIp != ''">
            and node_ip = #{nodeIp}
        </if>
    </select>

    <select id="getList"
        parameterType="com.webank.webase.data.collect.node.entity.NodeParam"
        resultMap="nodeMapWithFrontId">
        select a.*,b.front_id 
        from tb_node a
        left join tb_front b on a.node_id = b.node_id and a.chain_id = b.chain_id 
        where 1=1
        <if test="chainId != null">
            and a.chain_id = #{chainId}
        </if>
        <if test="groupId != null">
            and a.group_id = #{groupId}
        </if>
        <if test="nodeId != null and nodeId != ''">
            and a.node_id = #{nodeId}
        </if>
        <if test="p2pPort != null">
            and a.p2p_port = #{p2pPort}
        </if>
        <if test="nodeIp != null and nodeIp != ''">
            and a.node_ip = #{nodeIp}
        </if>
        <if test="flagSortedByTime != null and flagSortedByTime != ''">
            order by a.modify_time ${flagSortedByTime}
        </if>
        <if test="start != null and pageSize != null">
            limit #{start},#{pageSize}
        </if>
    </select>
    
    <select id="getOrgNodeCount"
        parameterType="com.webank.webase.data.collect.node.entity.NodeParam"
        resultType="java.lang.Integer">
        select count(distinct(node_id)) from tb_node
         where chain_id = #{chainId}
    </select>

    <select id="getOrgNodeList"
        parameterType="com.webank.webase.data.collect.node.entity.NodeParam"
        resultType="com.webank.webase.data.collect.node.entity.OrgInfo">
        select distinct(node_id) as nodeId,
               chain_id as chainId,
               org_name as orgName,
               description as description
          from tb_node
         where chain_id = #{chainId}
         group by node_id
        <if test="start != null and pageSize != null">
            limit #{start},#{pageSize}
        </if>
    </select>

    <select id="queryNodeByIpAndP2pPort" resultMap="nodeMap">
        select * from tb_node where node_ip = #{nodeIp} and p2p_port = #{p2pPort}
    </select>

    <select id="queryByNodeId" resultMap="nodeMap">
        select * from tb_node where node_id = #{nodeId}
    </select>

    <update id="update" parameterType="com.webank.webase.data.collect.node.entity.TbNode">
        update tb_node set modify_time=NOW()
        <if test="blockNumber != null">
            ,block_number = #{blockNumber}
        </if>
        <if test="pbftView != null">
            ,pbft_view = #{pbftView}
        </if>
        <if test="description != null and description != ''">
            ,description = #{description}
        </if>
        <if test="nodeActive != null">
            ,node_active = #{nodeActive}
        </if>
        where node_id = #{nodeId} and group_id = #{groupId}
    </update>

    <select id="queryNodeInfo"
        parameterType="com.webank.webase.data.collect.node.entity.NodeParam"
        resultMap="nodeMap">
        select * from tb_node where 1=1
        <if test="chainId != null">
            and chain_id = #{chainId}
        </if>
        <if test="groupId != null">
            and group_id = #{groupId}
        </if>
        <if test="nodeId != null and nodeId != ''">
            and node_id = #{nodeId}
        </if>
        <if test="p2pPort != null">
            and p2p_port = #{p2pPort}
        </if>
        <if test="nodeIp != null and nodeIp != ''">
            and node_ip = #{nodeIp}
        </if>
        limit 1
    </select>

    <delete id="deleteByNodeAndGroup">
        delete from tb_node where node_id = #{nodeId} and group_id = #{groupId}
    </delete>

    <delete id="deleteByGroupId">
        delete from tb_node
        where chain_id = #{chainId}
        and group_id = #{groupId}
    </delete>

    <delete id="deleteByChainId">
        delete from tb_node where chain_id = #{chainId}
    </delete>
</mapper>