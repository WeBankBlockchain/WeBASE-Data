group = 'com.webank.webase.data.collect'
version = '0.0.1-SNAPSHOT'

apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'


sourceCompatibility = 1.8
targetCompatibility = 1.8

[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

// In this section you declare where to find the dependencies of your project
repositories {
    maven {url "http://maven.aliyun.com/nexus/content/groups/public/"}
    
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url 'https://dl.bintray.com/ethereum/maven/' }
    mavenLocal()
    mavenCentral()
}

def springboot_version="2.3.1.RELEASE"
List springboot = [
     "org.springframework.boot:spring-boot-starter-web:$springboot_version",
     "org.springframework.boot:spring-boot-starter-log4j2:$springboot_version",
     "org.springframework.boot:spring-boot-starter-jdbc:$springboot_version"
]

List jaxb = [
     "javax.xml.bind:jaxb-api:2.3.0",
     "com.sun.xml.bind:jaxb-impl:2.3.0",
     "com.sun.xml.bind:jaxb-core:2.3.0",
     "javax.activation:activation:1.1.1",
     "javax.validation:validation-api:2.0.1.Final"
]

List web3jsdk = [
    "org.fisco-bcos:web3sdk:2.4.1"
]

List lombok = [
    "org.projectlombok:lombok:1.18.8"
]

List swagger = [
    'io.springfox:springfox-swagger2:2.8.0',
    'io.springfox:springfox-swagger-ui:2.8.0'
]

def jackson_version="2.11.0"
List jackson = [
    "com.fasterxml.jackson.core:jackson-databind:$jackson_version",
    "com.fasterxml.jackson.module:jackson-module-parameter-names:$jackson_version",
    "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jackson_version",
    "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson_version"
]

List mysql = [
    'mysql:mysql-connector-java:8.0.22',
    'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.0.0'
]

List test = [
    "org.springframework.boot:spring-boot-starter-test:$springboot_version"
]

def log4j_version="2.13.3"
List log4j = [
    "org.apache.logging.log4j:log4j-api:$log4j_version",
    "org.apache.logging.log4j:log4j-core:$log4j_version",
    "org.apache.logging.log4j:log4j-slf4j-impl:$log4j_version",
    "org.apache.logging.log4j:log4j-web:$log4j_version"
]

def elastic_version="7.8.0"
List elasticsearch = [
    "org.elasticsearch:elasticsearch:$elastic_version",
    "org.elasticsearch.client:elasticsearch-rest-high-level-client:$elastic_version",
    "org.elasticsearch.client:elasticsearch-rest-client:$elastic_version",
    "org.elasticsearch.plugin:transport-netty4-client:$elastic_version"
]

List elasticjob = [
    'org.apache.shardingsphere.elasticjob:elasticjob-lite-core:3.0.0-alpha'
]

List zookeeper = [
    'org.apache.zookeeper:zookeeper:3.6.2',
    'com.github.sgroschupf:zkclient:0.1'
]

dependencies {
    compile springboot,jaxb,web3jsdk,swagger,jackson,mysql,log4j,elasticsearch,elasticjob,zookeeper
    compile "org.apache.commons:commons-lang3:3.8.1"
    compile "cn.hutool:hutool-all:4.1.19"
    compile "com.zaxxer:HikariCP:3.2.0"
    compile "org.bouncycastle:bcprov-jdk15on:1.67"
    compile "org.hibernate:hibernate-validator:6.1.5.Final"

    annotationProcessor lombok
    compileOnly lombok

    testCompile test
}

configurations {
    all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    all*.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    all*.exclude group: 'log4j', module: 'log4j'
    all*.exclude group: 'org.ow2.asm', module: 'asm'
    all*.exclude group: 'jline', module: 'jline'
    all*.exclude group: 'com.google.protobuf', module: 'protobuf-java'
    all*.exclude group: 'javax.annotation', module: 'javax.annotation-api'
    all*.exclude group: 'org.ethereum'
    all*.exclude group: 'com.alibaba', module: 'fastjson'
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
}

clean {
    delete 'dist'
    delete 'build'
    delete 'log'
}

jar {
    destinationDir file('dist/apps')
    archiveName project.name + '.jar'
    exclude '**/*.xml'
    exclude '**/*.yml'
    exclude '**/*.properties'

    doLast {
        copy {
            from file('src/main/resources/')
            into 'dist/conf_template'
            exclude '**/static'
        }
        copy {
			from file('src/main/resources/static')
			into 'dist/static'
		}
        copy {
            from file('script/')
            into 'dist/script'
        }
        copy {
            from configurations.runtime
            into 'dist/lib'
        }
        copy {
            from file('.').listFiles().findAll{File f -> (f.name.endsWith('.sh') || f.name.endsWith('.env'))}
            into 'dist'
        }
    }
}
